import 'dart:collection';

import 'bpmf_codes.dart';

//#region final tree nodes

const untonedFinalsToMedRime = [
  ('a', (0, $a)),
  ('o', (0, $o)),
  ('e', (0, $e)),
  ('ê', (0, $eh)),
  ('eh', (0, $eh)),
  ('ai', (0, $ai)),
  ('ei', (0, $ei)),
  ('er', (0, $er)),
  ('ao', (0, $ao)),
  ('ou', (0, $ou)),
  ('an', (0, $an)),
  ('en', (0, $en)),
  ('ang', (0, $ang)),
  ('eng', (0, $eng)),
  ('i', ($i, 0)),
  ('ia', ($i, $a)),
  ('io', ($i, $o)),
  ('ie', ($i, $eh)),
  ('iai', ($i, $ai)),
  ('iao', ($i, $ao)),
  ('iu', ($i, $ou)),
  ('iou', ($i, $ou)),
  ('ian', ($i, $an)),
  ('in', ($i, $en)),
  ('iang', ($i, $ang)),
  ('ing', ($i, $eng)),
  ('u', ($u, 0)),
  ('ua', ($u, $a)),
  ('uo', ($u, $o)),
  // ('ue', ($yu, $eh)),
  ('uai', ($u, $ai)),
  ('ui', ($u, $ei)),
  ('uei', ($u, $ei)),
  ('uan', ($u, $an)),
  ('un', ($u, $en)),
  ('uang', ($u, $ang)),
  ('ong', ($u, $eng)),
  ('v', ($yu, 0)),
  ('ve', ($yu, $eh)),
  ('van', ($yu, $an)),
  ('vn', ($yu, $en)),
  ('iong', ($yu, $eng)),
  ('ü', ($yu, 0)),
  ('üe', ($yu, $eh)),
  ('ue', ($yu, $eh)),
  ('üan', ($yu, $an)),
  ('ün', ($yu, $en)),
];

const medRimeToAscii = {
  (0, $a): 'a',
  (0, $o): 'o',
  (0, $e): 'e',
  (0, $eh): 'eh', //yeh is bad
  (0, $ai): 'ai',
  (0, $ei): 'ei',
  (0, $ao): 'ao',
  (0, $ou): 'ou',
  (0, $an): 'an',
  (0, $en): 'en',
  (0, $ang): 'ang',
  (0, $eng): 'eng',
  (0, $er): 'er',
  (0, 0): 'i', //(r)i
  ($i, 0): 'i',
  ($i, $a): 'ia',
  ($i, $o): 'io',
  ($i, $eh): 'ie',
  ($i, $ai): 'iai',
  ($i, $ao): 'iao',
  ($i, $ou): 'iu',
  ($i, $an): 'ian',
  ($i, $en): 'in',
  ($i, $ang): 'iang',
  ($i, $eng): 'ing',
  ($u, 0): 'u',
  ($u, $a): 'ua',
  ($u, $eh): 'ue',
  ($u, $o): 'uo',
  ($u, $ai): 'uai',
  ($u, $ei): 'ui',
  ($u, $an): 'uan',
  ($u, $en): 'un',
  ($u, $ang): 'uang',
  ($u, $eng): 'ong',
  ($yu, 0): 'v',
  ($yu, $eh): 've',
  ($yu, $an): 'van',
  ($yu, $en): 'vn',
  ($yu, $eng): 'iong',
};

const tonedFinalsToMedRimetone = [
  ('ā', (0, $a, 1)),
  ('á', (0, $a, 2)),
  ('ǎ', (0, $a, 3)),
  ('à', (0, $a, 4)),
  ('a', (0, $a, 5)),
  ('āi', (0, $ai, 1)),
  ('ái', (0, $ai, 2)),
  ('ǎi', (0, $ai, 3)),
  ('ài', (0, $ai, 4)),
  ('ai', (0, $ai, 5)),
  ('ān', (0, $an, 1)),
  ('án', (0, $an, 2)),
  ('ǎn', (0, $an, 3)),
  ('àn', (0, $an, 4)),
  ('an', (0, $an, 5)),
  ('āng', (0, $ang, 1)),
  ('áng', (0, $ang, 2)),
  ('ǎng', (0, $ang, 3)),
  ('àng', (0, $ang, 4)),
  ('ang', (0, $ang, 5)),
  ('āo', (0, $ao, 1)),
  ('áo', (0, $ao, 2)),
  ('ǎo', (0, $ao, 3)),
  ('ào', (0, $ao, 4)),
  ('ao', (0, $ao, 5)),
  ('ē', (0, $e, 1)),
  ('é', (0, $e, 2)),
  ('ě', (0, $e, 3)),
  ('è', (0, $e, 4)),
  ('e', (0, $e, 5)),
  ('ēh', (0, $eh, 1)),
  ('éh', (0, $eh, 2)),
  ('ěh', (0, $eh, 3)),
  ('èh', (0, $eh, 4)),
  ('eh', (0, $eh, 5)),
  ('ēi', (0, $ei, 1)),
  ('éi', (0, $ei, 2)),
  ('ěi', (0, $ei, 3)),
  ('èi', (0, $ei, 4)),
  ('ei', (0, $ei, 5)),
  ('ēn', (0, $en, 1)),
  ('én', (0, $en, 2)),
  ('ěn', (0, $en, 3)),
  ('èn', (0, $en, 4)),
  ('en', (0, $en, 5)),
  ('ēng', (0, $eng, 1)),
  ('éng', (0, $eng, 2)),
  ('ěng', (0, $eng, 3)),
  ('èng', (0, $eng, 4)),
  ('eng', (0, $eng, 5)),
  ('ēr', (0, $er, 1)),
  ('ér', (0, $er, 2)),
  ('ěr', (0, $er, 3)),
  ('èr', (0, $er, 4)),
  ('er', (0, $er, 5)),
  ('ō', (0, $o, 1)),
  ('ó', (0, $o, 2)),
  ('ǒ', (0, $o, 3)),
  ('ò', (0, $o, 4)),
  ('o', (0, $o, 5)),
  ('ōu', (0, $ou, 1)),
  ('óu', (0, $ou, 2)),
  ('ǒu', (0, $ou, 3)),
  ('òu', (0, $ou, 4)),
  ('ou', (0, $ou, 5)),
  ('ī', ($i, 0, 1)),
  ('í', ($i, 0, 2)),
  ('ǐ', ($i, 0, 3)),
  ('ì', ($i, 0, 4)),
  ('i', ($i, 0, 5)),
  ('iā', ($i, $a, 1)),
  ('iá', ($i, $a, 2)),
  ('iǎ', ($i, $a, 3)),
  ('ià', ($i, $a, 4)),
  ('ia', ($i, $a, 5)),
  ('iān', ($i, $an, 1)),
  ('ián', ($i, $an, 2)),
  ('iǎn', ($i, $an, 3)),
  ('iàn', ($i, $an, 4)),
  ('ian', ($i, $an, 5)),
  ('iāng', ($i, $ang, 1)),
  ('iáng', ($i, $ang, 2)),
  ('iǎng', ($i, $ang, 3)),
  ('iàng', ($i, $ang, 4)),
  ('iang', ($i, $ang, 5)),
  ('iāo', ($i, $ao, 1)),
  ('iáo', ($i, $ao, 2)),
  ('iǎo', ($i, $ao, 3)),
  ('iào', ($i, $ao, 4)),
  ('iao', ($i, $ao, 5)),
  ('iē', ($i, $eh, 1)),
  ('ié', ($i, $eh, 2)),
  ('iě', ($i, $eh, 3)),
  ('iè', ($i, $eh, 4)),
  ('ie', ($i, $eh, 5)),
  ('īn', ($i, $en, 1)),
  ('ín', ($i, $en, 2)),
  ('ǐn', ($i, $en, 3)),
  ('ìn', ($i, $en, 4)),
  ('in', ($i, $en, 5)),
  ('īng', ($i, $eng, 1)),
  ('íng', ($i, $eng, 2)),
  ('ǐng', ($i, $eng, 3)),
  ('ìng', ($i, $eng, 4)),
  ('ing', ($i, $eng, 5)),
  ('iū', ($i, $ou, 1)),
  ('iōu', ($i, $ou, 1)),
  ('iú', ($i, $ou, 2)),
  ('ióu', ($i, $ou, 2)),
  ('iǔ', ($i, $ou, 3)),
  ('iǒu', ($i, $ou, 3)),
  ('iù', ($i, $ou, 4)),
  ('iòu', ($i, $ou, 4)),
  ('iu', ($i, $ou, 5)),
  ('iou', ($i, $ou, 5)),
  ('ū', ($u, 0, 1)),
  ('ú', ($u, 0, 2)),
  ('ǔ', ($u, 0, 3)),
  ('ù', ($u, 0, 4)),
  ('u', ($u, 0, 5)),
  ('uā', ($u, $a, 1)),
  ('uá', ($u, $a, 2)),
  ('uǎ', ($u, $a, 3)),
  ('uà', ($u, $a, 4)),
  ('ua', ($u, $a, 5)),
  ('uāi', ($u, $ai, 1)),
  ('uái', ($u, $ai, 2)),
  ('uǎi', ($u, $ai, 3)),
  ('uài', ($u, $ai, 4)),
  ('uai', ($u, $ai, 5)),
  ('uān', ($u, $an, 1)),
  ('uán', ($u, $an, 2)),
  ('uǎn', ($u, $an, 3)),
  ('uàn', ($u, $an, 4)),
  ('uan', ($u, $an, 5)),
  ('uāng', ($u, $ang, 1)),
  ('uáng', ($u, $ang, 2)),
  ('uǎng', ($u, $ang, 3)),
  ('uàng', ($u, $ang, 4)),
  ('uang', ($u, $ang, 5)),
  ('uī', ($u, $ei, 1)),
  ('uēi', ($u, $ei, 1)),
  ('uí', ($u, $ei, 2)),
  ('uéi', ($u, $ei, 2)),
  ('uǐ', ($u, $ei, 3)),
  ('uěi', ($u, $ei, 3)),
  ('uì', ($u, $ei, 4)),
  ('uèi', ($u, $ei, 4)),
  ('ui', ($u, $ei, 5)),
  ('uei', ($u, $ei, 5)),
  ('ūn', ($u, $en, 1)),
  ('ún', ($u, $en, 2)),
  ('ǔn', ($u, $en, 3)),
  ('ùn', ($u, $en, 4)),
  ('un', ($u, $en, 5)),
  ('ōng', ($u, $eng, 1)),
  ('óng', ($u, $eng, 2)),
  ('ǒng', ($u, $eng, 3)),
  ('òng', ($u, $eng, 4)),
  ('ong', ($u, $eng, 5)),
  ('uō', ($u, $o, 1)),
  ('uó', ($u, $o, 2)),
  ('uǒ', ($u, $o, 3)),
  ('uò', ($u, $o, 4)),
  ('uo', ($u, $o, 5)),
  ('ǖ', ($yu, 0, 1)),
  ('ǘ', ($yu, 0, 2)),
  ('ǚ', ($yu, 0, 3)),
  ('ǜ', ($yu, 0, 4)),
  ('ü', ($yu, 0, 5)),
  ('üān', ($yu, $an, 1)),
  ('üán', ($yu, $an, 2)),
  ('üǎn', ($yu, $an, 3)),
  ('üàn', ($yu, $an, 4)),
  ('üan', ($yu, $an, 5)),
  ('uē', ($yu, $eh, 1)),
  ('üē', ($yu, $eh, 1)),
  ('ué', ($yu, $eh, 2)),
  ('üé', ($yu, $eh, 2)),
  ('uě', ($yu, $eh, 3)),
  ('üě', ($yu, $eh, 3)),
  ('uè', ($yu, $eh, 4)),
  ('üè', ($yu, $eh, 4)),
  ('ue', ($yu, $eh, 5)),
  ('üe', ($yu, $eh, 5)),
  ('iōng', ($yu, $eng, 1)),
  ('ióng', ($yu, $eng, 2)),
  ('iǒng', ($yu, $eng, 3)),
  ('iòng', ($yu, $eng, 4)),
  ('iong', ($yu, $eng, 5)),
];

//#endregion

//#region maps

const pyRimeNucCodaMap = {
  $a: ($A, ''),
  $o: ($O, ''),
  $e: ($E, ''),
  $eh: ($E, ''),
  $ai: ($A, 'i'),
  $ei: ($E, 'i'),
  $ao: ($A, 'o'),
  $ou: ($O, 'u'),
  $an: ($A, 'n'),
  $en: ($E, 'n'),
  $ang: ($A, 'ng'),
  $eng: ($E, 'ng'),
  $er: ($E, 'r'),
  $i: ($I, ''),
  $u: ($U, ''),
  $yu: ($YU, ''),
  0: ($I, ''), //(r)i
};

final pyVowels = HashSet.from('āáǎàaēéěèeīíǐìiōóǒòoūúǔùuǖǘǚǜü'.codeUnits);

const pyUntonedToTonedNucMap = {
  $A: 'āáǎàa',
  $E: 'ēéěèe',
  $I: 'īíǐìi',
  $O: 'ōóǒòo',
  $U: 'ūúǔùu',
  $YU: 'ǖǘǚǜü',
};

final Map<int, int> pyTonedToUntonedNucMap = (() => {
      for (final MapEntry(:key, :value) in pyUntonedToTonedNucMap.entries)
        for (final ch in value.codeUnits) ch: key
    })();

const pyFirstLetterMap = {
  $B: $b,
  $P: $p,
  $M: $m,
  $F: $f,
  $D: $d,
  $T: $t,
  $N: $n,
  $L: $l,
  $G: $g,
  $K: $k,
  $H: $h,
  $J: $j,
  $Q: $q,
  $X: $x,
  $Z: $z,
  $C: $c,
  $S: $s,
  $R: $r,
  $Y: $i,
  $W: $u,
};

const initialPyMap = {
  $b: 'b',
  $p: 'p',
  $m: 'm',
  $f: 'f',
  $d: 'd',
  $t: 't',
  $n: 'n',
  $l: 'l',
  $g: 'g',
  $k: 'k',
  $h: 'h',
  $j: 'j',
  $q: 'q',
  $x: 'x',
  $zh: 'zh',
  $ch: 'ch',
  $sh: 'sh',
  $r: 'r',
  $z: 'z',
  $c: 'c',
  $s: 's',
  $i: 'y',
  $u: 'w',
  $yu: 'y',
  // 0: '',
};



//#endregion
